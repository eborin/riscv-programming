<div id="pf6c" class="pf w0 h0" data-page-no="6c"><div class="pc pc6c w0 h0"><img class="bi xf y1008 w2 hc7" alt="" src="bg6c.png"/><div class="t m0 xf h8 y105 ff3 fs4 fc0 sc0 ls0 ws0">7.2.<span class="_ _1f"> </span>THE<span class="_ _2"> </span>PROGRAM<span class="_ _6"> </span>ST<span class="_ _9"></span>ACK</div><div class="t m0 xc h8 y57 ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _3"> </span>following<span class="_ _2"> </span>co<span class="_ _5"></span>de<span class="_ _b"> </span>shows<span class="_ _2"> </span>how<span class="_ _3"> </span>to<span class="_ _3"> </span>p<span class="_ _5"></span>op<span class="_ _3"> </span>four<span class="_ _b"> </span>v<span class="_ _27"></span>alues<span class="_ _3"> </span>from<span class="_ _b"> </span>the<span class="_ _3"> </span>program<span class="_ _3"> </span>stack<span class="_ _3"> </span>in<span class="_ _1"></span>to<span class="_ _3"> </span>registers<span class="_ _b"> </span><span class="ff5">a3</span>,<span class="_ _3"> </span><span class="ff5">a2</span>,<span class="_ _b"> </span><span class="ff5">a1</span>,</div><div class="t m0 xf h8 y86 ff3 fs4 fc0 sc0 ls0 ws0">and<span class="_ _2"> </span><span class="ff5">a0</span>.<span class="_ _24"> </span>Notice<span class="_ _3"> </span>that<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _2"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ter<span class="_ _2"> </span>was<span class="_ _6"> </span>adjusted<span class="_ _3"> </span>only<span class="_ _2"> </span>once<span class="_ _3"> </span>and<span class="_ _2"> </span>the<span class="_ _2"> </span>immediate<span class="_ _3"> </span>ﬁeld<span class="_ _2"> </span>of<span class="_ _2"> </span>the<span class="_ _3"> </span>load<span class="_ _2"> </span>word</div><div class="t m0 xf h8 y87 ff3 fs4 fc0 sc0 ls0 ws0">instruction<span class="_ _2"> </span>(<span class="ff5">lw</span>)<span class="_ _3"> </span>was<span class="_ _2"> </span>used<span class="_ _3"> </span>to<span class="_ _2"> </span>select<span class="_ _3"> </span>the<span class="_ _3"> </span>prop<span class="_ _5"></span>er<span class="_ _2"> </span>p<span class="_ _5"></span>osition<span class="_ _3"> </span>to<span class="_ _3"> </span>load<span class="_ _3"> </span>eac<span class="_ _1"></span>h<span class="_ _2"> </span>one<span class="_ _3"> </span>of<span class="_ _3"> </span>the<span class="_ _3"> </span>v<span class="_ _27"></span>alues.<span class="_ _18"> </span>In<span class="_ _3"> </span>this<span class="_ _2"> </span>example,</div><div class="t m0 xf h8 y88 ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>ﬁrst<span class="_ _2"> </span>v<span class="_ _27"></span>alue<span class="_ _6"> </span>p<span class="_ _5"></span>opp<span class="_ _5"></span>ed<span class="_ _2"> </span>from<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>was<span class="_ _6"> </span>stored<span class="_ _2"> </span>into<span class="_ _6"> </span>register<span class="_ _2"> </span><span class="ff5">a3</span>.</div><div class="t m0 x116 h9 y5b5 ff22 fs11 fc0 sc0 ls0 ws0">1<span class="_ _2a"> </span><span class="ff5 fs4">lw<span class="_ _3f"> </span>a3,<span class="_ _79"> </span>0(sp)<span class="_ _3f"> </span>#<span class="_ _18"> </span>retrieve<span class="_ _4"> </span>the<span class="_ _4"> </span>first<span class="_ _18"> </span>value<span class="_ _4"> </span>(SP+0)</span></div><div class="t m0 x116 h9 y5b6 ff22 fs11 fc0 sc0 ls0 ws0">2<span class="_ _2a"> </span><span class="ff5 fs4">lw<span class="_ _3f"> </span>a2,<span class="_ _79"> </span>4(sp)<span class="_ _3f"> </span>#<span class="_ _18"> </span>retrieve<span class="_ _4"> </span>the<span class="_ _4"> </span>second<span class="_ _18"> </span>value<span class="_ _4"> </span>(SP+4)</span></div><div class="t m0 x116 h9 y5b7 ff22 fs11 fc0 sc0 ls0 ws0">3<span class="_ _2a"> </span><span class="ff5 fs4">lw<span class="_ _3f"> </span>a1,<span class="_ _79"> </span>8(sp)<span class="_ _3f"> </span>#<span class="_ _18"> </span>retrieve<span class="_ _4"> </span>the<span class="_ _4"> </span>third<span class="_ _18"> </span>value<span class="_ _4"> </span>(SP+8)</span></div><div class="t m0 x116 h9 y5b8 ff22 fs11 fc0 sc0 ls0 ws0">4<span class="_ _2a"> </span><span class="ff5 fs4">lw<span class="_ _3f"> </span>a0,<span class="_ _4"> </span>12(sp)<span class="_ _3f"> </span>#<span class="_ _18"> </span>retrieve<span class="_ _4"> </span>the<span class="_ _4"> </span>last<span class="_ _4"> </span>value<span class="_ _18"> </span>(SP+12)</span></div><div class="t m0 x116 h9 y5b9 ff22 fs11 fc0 sc0 ls0 ws0">5<span class="_ _2a"> </span><span class="ff5 fs4">addi<span class="_ _4"> </span>sp,<span class="_ _18"> </span>sp,<span class="_ _4"> </span>16<span class="_ _3f"> </span>#<span class="_ _4"> </span>deallocate<span class="_ _4"> </span>stack<span class="_ _18"> </span>space<span class="_ _4"> </span>(4<span class="_ _4"> </span>words)</span></div><div class="t m0 xc h8 y1009 ff3 fs4 fc0 sc0 ls0 ws0">Previous<span class="_ _2"> </span>examples<span class="_ _6"> </span>show<span class="_ _1"></span>ed<span class="_ _6"> </span>how<span class="_ _6"> </span>to<span class="_ _2"> </span>p<span class="_ _5"></span>erform<span class="_ _2"> </span>push<span class="_ _2"> </span>and<span class="_ _2"> </span>p<span class="_ _5"></span>op<span class="_ _2"> </span>op<span class="_ _5"></span>erations<span class="_ _2"> </span>on<span class="_ _2"> </span>the<span class="_ _2"> </span>program<span class="_ _2"> </span>stack.<span class="_ _34"> </span>Popping</div><div class="t m0 xf h8 y100a ff3 fs4 fc0 sc0 ls0 ws0">data<span class="_ _b"> </span>from<span class="_ _34"> </span>the<span class="_ _34"> </span>stac<span class="_ _1"></span>k<span class="_ _b"> </span>consists<span class="_ _34"> </span>of<span class="_ _34"> </span>retrieving<span class="_ _b"> </span>the<span class="_ _34"> </span>data<span class="_ _34"> </span>and<span class="_ _b"> </span>then<span class="_ _34"> </span>deallo<span class="_ _5"></span>cating<span class="_ _34"> </span>the<span class="_ _34"> </span>stac<span class="_ _1"></span>k<span class="_ _b"> </span>space,<span class="_ _7"> </span>how<span class="_ _27"></span>ever,<span class="_ _b"> </span>if</div><div class="t m0 xf h8 y100b ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>data<span class="_ _3"> </span>is<span class="_ _2"> </span>not<span class="_ _3"> </span>needed<span class="_ _2"> </span>anymore,<span class="_ _2"> </span>then,<span class="_ _3"> </span>only<span class="_ _2"> </span>the<span class="_ _3"> </span>deallo<span class="_ _5"></span>cation<span class="_ _2"> </span>pro<span class="_ _5"></span>cess<span class="_ _3"> </span>needs<span class="_ _3"> </span>to<span class="_ _2"> </span>b<span class="_ _5"></span>e<span class="_ _3"> </span>p<span class="_ _5"></span>erformed.<span class="_ _24"> </span>As<span class="_ _3"> </span>w<span class="_ _1"></span>e<span class="_ _2"> </span>will</div><div class="t m0 xf h8 y100c ff3 fs4 fc0 sc0 ls0 ws0">discuss<span class="_ _34"> </span>in<span class="_ _34"> </span>sections<span class="_ _34"> </span>7.4<span class="_ _7"> </span>and<span class="_ _34"> </span>7.6,<span class="_ _7"> </span>allo<span class="_ _5"></span>cating<span class="_ _7"> </span>or<span class="_ _34"> </span>deallo<span class="_ _5"></span>cating<span class="_ _34"> </span>stack<span class="_ _b"> </span>space<span class="_ _7"> </span>without<span class="_ _34"> </span>immediately<span class="_ _34"> </span>storing<span class="_ _7"> </span>or</div><div class="t m0 xf h8 y100d ff3 fs4 fc0 sc0 ls0 ws0">retrieving<span class="_ _2"> </span>data<span class="_ _2"> </span>to<span class="_ _6"> </span>or<span class="_ _2"> </span>from<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>is<span class="_ _2"> </span>useful<span class="_ _2"> </span>in<span class="_ _2"> </span>many<span class="_ _6"> </span>cases.</div><div class="t m0 xf h8 y100e ff7 fs4 fc0 sc0 ls0 ws0">Initializing<span class="_ _3"> </span>the<span class="_ _b"> </span>stack<span class="_ _3"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ter</div><div class="t m0 xf h8 y100f ff3 fs4 fc0 sc0 ls0 ws0">The<span class="_ _34"> </span>stack<span class="_ _34"> </span>p<span class="_ _5"></span>ointer<span class="_ _34"> </span>register<span class="_ _7"> </span>must<span class="_ _34"> </span>b<span class="_ _5"></span>e<span class="_ _7"> </span>initialized<span class="_ _7"> </span>to<span class="_ _7"> </span>the<span class="_ _7"> </span>base<span class="_ _7"> </span>of<span class="_ _7"> </span>the<span class="_ _7"> </span>program<span class="_ _7"> </span>stac<span class="_ _1"></span>k<span class="_ _34"> </span>b<span class="_ _5"></span>efore<span class="_ _7"> </span>executing<span class="_ _7"> </span>the</div><div class="t m0 xf h8 y1010 ff3 fs4 fc0 sc0 ls0 ws0">program.<span class="_ _2a"> </span>When<span class="_ _3"> </span>running<span class="_ _b"> </span>the<span class="_ _3"> </span>program<span class="_ _b"> </span>without<span class="_ _3"> </span>the<span class="_ _3"> </span>supp<span class="_ _5"></span>ort<span class="_ _b"> </span>of<span class="_ _3"> </span>an<span class="_ _b"> </span>op<span class="_ _5"></span>erating<span class="_ _3"> </span>system<span class="_ _b"> </span>(for<span class="_ _3"> </span>example,<span class="_ _b"> </span>in<span class="_ _3"> </span>an</div><div class="t m0 xf h8 y1011 ff3 fs4 fc0 sc0 ls0 ws0">em<span class="_ _1"></span>b<span class="_ _5"></span>edded<span class="_ _2"> </span>system)<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer<span class="_ _6"> </span>must<span class="_ _6"> </span>b<span class="_ _5"></span>e<span class="_ _2"> </span>initialized<span class="_ _2"> </span>by<span class="_ _6"> </span>the<span class="_ _2"> </span>system<span class="_ _3"> </span>initialization<span class="_ _2"> </span>co<span class="_ _5"></span>de.<span class="_ _7"> </span>On<span class="_ _2"> </span>the<span class="_ _2"> </span>other</div><div class="t m0 xf h8 y1012 ff3 fs4 fc0 sc0 ls0 ws0">hand,<span class="_ _b"> </span>when<span class="_ _b"> </span>running<span class="_ _3"> </span>the<span class="_ _b"> </span>program<span class="_ _b"> </span>on<span class="_ _b"> </span>top<span class="_ _3"> </span>of<span class="_ _b"> </span>an<span class="_ _b"> </span>op<span class="_ _5"></span>erating<span class="_ _b"> </span>system,<span class="_ _b"> </span>the<span class="_ _3"> </span>execution<span class="_ _b"> </span>environmen<span class="_ _27"></span>t<span class="_ _b"> </span>(<span class="ff8">e.g.</span>,<span class="_ _b"> </span>the</div><div class="t m0 xf h8 y1013 ff3 fs4 fc0 sc0 ls0 ws0">op<span class="_ _5"></span>erating<span class="_ _a"> </span>system k<span class="_ _27"></span>ernel) usually<span class="_ _a"> </span>initializes the<span class="_ _a"> </span>stack<span class="_ _a"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ter<span class="_ _a"> </span>b<span class="_ _5"></span>efore jumping<span class="_ _a"> </span>to the<span class="_ _a"> </span>program’s en<span class="_ _27"></span>try point.</div><div class="t m0 xf hb y1014 ff6 fs6 fc0 sc0 ls0 ws0">7.2.1<span class="_ _11"> </span>T<span class="_ _27"></span>yp<span class="_ _22"></span>es<span class="_ _34"> </span>of<span class="_ _24"> </span>stac<span class="_ _27"></span>ks</div><div class="t m0 xf h8 y1015 ff3 fs4 fc0 sc0 ls0 ws0">Program<span class="_ _b"> </span>stac<span class="_ _1"></span>ks<span class="_ _b"> </span>can<span class="_ _b"> </span>be<span class="_ _b"> </span>classiﬁed<span class="_ _b"> </span>as:<span class="_ _2a"> </span>full<span class="_ _b"> </span>descending,<span class="_ _34"> </span>full<span class="_ _b"> </span>ascending,<span class="_ _b"> </span>empty<span class="_ _3"> </span>descending,<span class="_ _34"> </span>and<span class="_ _b"> </span>empt<span class="_ _1"></span>y<span class="_ _b"> </span>as-</div><div class="t m0 xf h8 y1016 ff3 fs4 fc0 sc0 ls0 ws0">cending.</div><div class="t m0 xc h8 y1017 ff3 fs4 fc0 sc0 ls0 ws0">A<span class="_ _a"> </span><span class="ff7">full<span class="_ _38"> </span>descending<span class="_ _38"> </span>stac<span class="_ _27"></span>k is<span class="_ _8b"> </span>a<span class="_ _8b"> </span>stack<span class="_ _8b"> </span>that:<span class="_ _24"> </span>(a)<span class="_ _8b"> </span>grows<span class="_ _8b"> </span>to<span class="_ _1"></span>w<span class="_ _27"></span>ards lo<span class="_ _27"></span>w<span class="_ _38"> </span>addresses, and<span class="_ _8b"> </span>(b)<span class="_ _8b"> </span>the stac<span class="_ _27"></span>k</span></div><div class="t m0 xf h8 y1018 ff7 fs4 fc0 sc0 ls0 ws0">p<span class="_ _5"></span>oin<span class="_ _1"></span>ter<span class="_ _3"> </span>p<span class="_ _5"></span>oints<span class="_ _2"> </span>to<span class="_ _b"> </span>the<span class="_ _3"> </span>last<span class="_ _3"> </span>element<span class="_ _3"> </span>pushed<span class="_ _3"> </span>into<span class="_ _2"> </span>the<span class="_ _b"> </span>stac<span class="_ _27"></span>k<span class="ff3">.<span class="_ _7"> </span>Pushing<span class="_ _2"> </span>a<span class="_ _2"> </span>v<span class="_ _27"></span>alue<span class="_ _6"> </span>into<span class="_ _6"> </span>a<span class="_ _6"> </span>full<span class="_ _2"> </span>descending</span></div><div class="t m0 xf h8 y1019 ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _34"> </span>is<span class="_ _b"> </span>p<span class="_ _5"></span>erformed<span class="_ _34"> </span>by<span class="_ _b"> </span>decreasing<span class="_ _34"> </span>the<span class="_ _34"> </span>stack<span class="_ _b"> </span>p<span class="_ _5"></span>ointer<span class="_ _b"> </span>and<span class="_ _34"> </span>then<span class="_ _34"> </span>storing<span class="_ _34"> </span>the<span class="_ _34"> </span>v<span class="_ _27"></span>alue<span class="_ _34"> </span>into<span class="_ _b"> </span>the<span class="_ _34"> </span>memory<span class="_ _34"> </span>word</div><div class="t m0 xf h8 y101a ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _5"></span>oin<span class="_ _1"></span>ted<span class="_ _6"> </span>by<span class="_ _6"> </span>the<span class="_ _6"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer.<span class="_ _34"> </span>Popping a<span class="_ _2"> </span>v<span class="_ _27"></span>alue<span class="_ _2"> </span>from<span class="_ _6"> </span>a<span class="_ _2"> </span>full<span class="_ _2"> </span>descending<span class="_ _6"> </span>stack<span class="_ _6"> </span>is<span class="_ _6"> </span>p<span class="_ _5"></span>erformed<span class="_ _2"> </span>by<span class="_ _6"> </span>ﬁrst<span class="_ _6"> </span>loading</div><div class="t m0 xf h8 y101b ff3 fs4 fc0 sc0 ls0 ws0">the<span class="_ _2"> </span>v<span class="_ _27"></span>alue<span class="_ _2"> </span>from<span class="_ _6"> </span>the<span class="_ _2"> </span>memory<span class="_ _2"> </span>word<span class="_ _6"> </span>p<span class="_ _5"></span>ointed<span class="_ _6"> </span>by<span class="_ _6"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer<span class="_ _6"> </span>and<span class="_ _2"> </span>then<span class="_ _2"> </span>increasing<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer.</div><div class="t m0 xc h8 y101c ff3 fs4 fc0 sc0 ls0 ws0">An <span class="ff7">empty descending stac<span class="_ _27"></span>k<span class="_ _2"> </span>is<span class="_ _2"> </span>a<span class="_ _2"> </span>stack that:<span class="_ _24"> </span>(a) grows to<span class="_ _27"></span>wards lo<span class="_ _27"></span>w<span class="_ _2"> </span>addresses,<span class="_ _2"> </span>and<span class="_ _2"> </span>(b)<span class="_ _2"> </span>the</span></div><div class="t m0 xf h8 y101d ff7 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _27"></span>k<span class="_ _3"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ter p<span class="_ _5"></span>oints to the<span class="_ _3"> </span>next av<span class="_ _9"></span>ailable memory<span class="_ _3"> </span>p<span class="_ _5"></span>osition<span class="ff3">,<span class="_ _38"> </span><span class="ff8">i.e.</span>,<span class="_ _6"> </span>the<span class="_ _6"> </span>memory p<span class="_ _5"></span>osition<span class="_ _6"> </span>that must</span></div><div class="t m0 xf h8 y101e ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _5"></span>e<span class="_ _3"> </span>used<span class="_ _3"> </span>to<span class="_ _2"> </span>store<span class="_ _3"> </span>the<span class="_ _3"> </span>next<span class="_ _3"> </span>item<span class="_ _3"> </span>to<span class="_ _3"> </span>b<span class="_ _5"></span>e<span class="_ _3"> </span>pushed<span class="_ _3"> </span>into<span class="_ _2"> </span>the<span class="_ _3"> </span>stack.<span class="_ _18"> </span>Pushing<span class="_ _3"> </span>a<span class="_ _3"> </span>v<span class="_ _27"></span>alue<span class="_ _3"> </span>into<span class="_ _2"> </span>an<span class="_ _3"> </span>empty<span class="_ _2"> </span>descending</div><div class="t m0 xf h8 y101f ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _34"> </span>is<span class="_ _34"> </span>p<span class="_ _5"></span>erformed<span class="_ _34"> </span>by<span class="_ _34"> </span>ﬁrst<span class="_ _34"> </span>storing<span class="_ _34"> </span>the<span class="_ _7"> </span>v<span class="_ _27"></span>alue<span class="_ _34"> </span>into<span class="_ _b"> </span>the<span class="_ _34"> </span>memory<span class="_ _7"> </span>word<span class="_ _b"> </span>p<span class="_ _5"></span>ointed<span class="_ _b"> </span>by<span class="_ _b"> </span>the<span class="_ _7"> </span>stac<span class="_ _1"></span>k<span class="_ _34"> </span>p<span class="_ _5"></span>ointer<span class="_ _b"> </span>(an</div><div class="t m0 xf h8 y1020 ff3 fs4 fc0 sc0 ls0 ws0">empt<span class="_ _1"></span>y<span class="_ _b"> </span>memory<span class="_ _b"> </span>word),<span class="_ _b"> </span>then<span class="_ _b"> </span>decreasing<span class="_ _34"> </span>the<span class="_ _b"> </span>stack<span class="_ _b"> </span>pointer.<span class="_ _17"> </span>Popping<span class="_ _b"> </span>a<span class="_ _b"> </span>v<span class="_ _27"></span>alue<span class="_ _b"> </span>from<span class="_ _34"> </span>an<span class="_ _b"> </span>empty<span class="_ _3"> </span>descending</div><div class="t m0 xf h8 y1021 ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _b"> </span>is<span class="_ _b"> </span>performed<span class="_ _b"> </span>by<span class="_ _3"> </span>ﬁrst<span class="_ _b"> </span>increasing<span class="_ _b"> </span>the<span class="_ _b"> </span>stack<span class="_ _3"> </span>p<span class="_ _5"></span>ointer<span class="_ _3"> </span>then<span class="_ _b"> </span>loading<span class="_ _b"> </span>the<span class="_ _b"> </span>v<span class="_ _27"></span>alue<span class="_ _b"> </span>from<span class="_ _b"> </span>the<span class="_ _3"> </span>memory<span class="_ _b"> </span>word</div><div class="t m0 xf h8 y1022 ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _5"></span>oin<span class="_ _1"></span>ted<span class="_ _6"> </span>by<span class="_ _6"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer.</div><div class="t m0 xc h8 y1023 ff3 fs4 fc0 sc0 ls0 ws0">A<span class="_ _b"> </span><span class="ff7">full<span class="_ _24"> </span>ascending<span class="_ _24"> </span>stack<span class="_ _7"> </span>is<span class="_ _24"> </span>a<span class="_ _24"> </span>stack<span class="_ _7"> </span>that:<span class="_ _39"> </span>(a)<span class="_ _24"> </span>grows<span class="_ _7"> </span>tow<span class="_ _27"></span>ards<span class="_ _24"> </span>high<span class="_ _24"> </span>addresses,<span class="_ _24"> </span>and<span class="_ _24"> </span>(b)<span class="_ _24"> </span>the</span></div><div class="t m0 xf h8 y1024 ff7 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _27"></span>k<span class="_ _18"> </span>p<span class="_ _22"></span>oin<span class="_ _27"></span>ter<span class="_ _18"> </span>p<span class="_ _5"></span>oints<span class="_ _24"> </span>to<span class="_ _18"> </span>the<span class="_ _18"> </span>last<span class="_ _18"> </span>element<span class="_ _24"> </span>pushed<span class="_ _18"> </span>in<span class="_ _1"></span>to<span class="_ _18"> </span>the<span class="_ _18"> </span>stac<span class="_ _27"></span>k<span class="ff3">.<span class="_ _1f"> </span>Pushing<span class="_ _34"> </span>a<span class="_ _7"> </span>v<span class="_ _27"></span>alue<span class="_ _7"> </span>into<span class="_ _b"> </span>a<span class="_ _7"> </span>full</span></div><div class="t m0 xf h8 y1025 ff3 fs4 fc0 sc0 ls0 ws0">ascending stack is<span class="_ _6"> </span>p<span class="_ _5"></span>erformed by increasing<span class="_ _6"> </span>the<span class="_ _38"> </span>stack p<span class="_ _5"></span>ointer and<span class="_ _38"> </span>then<span class="_ _6"> </span>storing<span class="_ _6"> </span>the<span class="_ _38"> </span>v<span class="_ _27"></span>alue<span class="_ _6"> </span>into the<span class="_ _38"> </span>memory</div><div class="t m0 xf h8 y1026 ff3 fs4 fc0 sc0 ls0 ws0">w<span class="_ _1"></span>ord<span class="_ _b"> </span>p<span class="_ _5"></span>ointed<span class="_ _b"> </span>b<span class="_ _27"></span>y<span class="_ _34"> </span>the<span class="_ _b"> </span>stack<span class="_ _b"> </span>p<span class="_ _5"></span>ointer.<span class="_ _17"> </span>Popping<span class="_ _b"> </span>a<span class="_ _b"> </span>v<span class="_ _27"></span>alue<span class="_ _b"> </span>from<span class="_ _34"> </span>a<span class="_ _b"> </span>full<span class="_ _34"> </span>ascending<span class="_ _b"> </span>stack<span class="_ _b"> </span>is<span class="_ _b"> </span>p<span class="_ _5"></span>erformed<span class="_ _34"> </span>by<span class="_ _3"> </span>ﬁrst</div><div class="t m0 xf h8 y1027 ff3 fs4 fc0 sc0 ls0 ws0">loading<span class="_ _b"> </span>the<span class="_ _34"> </span>v<span class="_ _27"></span>alue<span class="_ _34"> </span>from<span class="_ _34"> </span>the<span class="_ _34"> </span>memory<span class="_ _34"> </span>word<span class="_ _b"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ted<span class="_ _34"> </span>b<span class="_ _1"></span>y<span class="_ _b"> </span>the<span class="_ _34"> </span>stack<span class="_ _b"> </span>p<span class="_ _5"></span>ointer<span class="_ _b"> </span>and<span class="_ _34"> </span>then<span class="_ _34"> </span>decreasing<span class="_ _34"> </span>the<span class="_ _b"> </span>stack</div><div class="t m0 xf h8 y1028 ff3 fs4 fc0 sc0 ls0 ws0">p<span class="_ _5"></span>oin<span class="_ _1"></span>ter.</div><div class="t m0 xc h8 y1029 ff3 fs4 fc0 sc0 ls0 ws0">An <span class="ff7">empty ascending<span class="_ _2"> </span>stack is a<span class="_ _2"> </span>stack that:<span class="_ _18"> </span>(a) grows tow<span class="_ _27"></span>ards high<span class="_ _3"> </span>addresses,<span class="_ _2"> </span>and<span class="_ _2"> </span>(b)<span class="_ _2"> </span>the</span></div><div class="t m0 xf h8 y102a ff7 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _27"></span>k<span class="_ _3"> </span>p<span class="_ _5"></span>oin<span class="_ _1"></span>ter p<span class="_ _5"></span>oints to the<span class="_ _3"> </span>next av<span class="_ _9"></span>ailable memory<span class="_ _3"> </span>p<span class="_ _5"></span>osition<span class="ff3">,<span class="_ _38"> </span><span class="ff8">i.e.</span>,<span class="_ _6"> </span>the<span class="_ _6"> </span>memory p<span class="_ _5"></span>osition<span class="_ _6"> </span>that must</span></div><div class="t m0 xf h8 y102b ff3 fs4 fc0 sc0 ls0 ws0">b<span class="_ _5"></span>e<span class="_ _3"> </span>used<span class="_ _b"> </span>to<span class="_ _b"> </span>store<span class="_ _b"> </span>the<span class="_ _3"> </span>next<span class="_ _b"> </span>item<span class="_ _b"> </span>to<span class="_ _3"> </span>b<span class="_ _5"></span>e<span class="_ _b"> </span>pushed<span class="_ _b"> </span>into<span class="_ _3"> </span>the<span class="_ _3"> </span>stack.<span class="_ _1c"> </span>Pushing<span class="_ _3"> </span>a<span class="_ _b"> </span>v<span class="_ _27"></span>alue<span class="_ _b"> </span>into<span class="_ _3"> </span>an<span class="_ _3"> </span>empty<span class="_ _3"> </span>ascending</div><div class="t m0 xf h8 y102c ff3 fs4 fc0 sc0 ls0 ws0">stac<span class="_ _1"></span>k<span class="_ _34"> </span>is<span class="_ _34"> </span>p<span class="_ _5"></span>erformed<span class="_ _34"> </span>by<span class="_ _34"> </span>ﬁrst<span class="_ _34"> </span>storing<span class="_ _34"> </span>the<span class="_ _7"> </span>v<span class="_ _27"></span>alue<span class="_ _34"> </span>into<span class="_ _b"> </span>the<span class="_ _34"> </span>memory<span class="_ _7"> </span>word<span class="_ _b"> </span>p<span class="_ _5"></span>ointed<span class="_ _b"> </span>by<span class="_ _b"> </span>the<span class="_ _7"> </span>stac<span class="_ _1"></span>k<span class="_ _34"> </span>p<span class="_ _5"></span>ointer<span class="_ _b"> </span>(an</div><div class="t m0 xf h8 y102d ff3 fs4 fc0 sc0 ls0 ws0">empt<span class="_ _1"></span>y<span class="_ _2"> </span>memory<span class="_ _2"> </span>word),<span class="_ _6"> </span>then<span class="_ _2"> </span>increasing<span class="_ _2"> </span>the<span class="_ _2"> </span>stack<span class="_ _6"> </span>p<span class="_ _5"></span>ointer.<span class="_ _7"> </span>Popping<span class="_ _6"> </span>a<span class="_ _2"> </span>v<span class="_ _27"></span>alue<span class="_ _2"> </span>from<span class="_ _2"> </span>a<span class="_ _2"> </span>full<span class="_ _3"> </span>ascending<span class="_ _2"> </span>stack<span class="_ _6"> </span>is</div><div class="t m0 x2c h8 y33 ff3 fs4 fc0 sc0 ls0 ws0">Prin<span class="_ _1"></span>ted<span class="_ _2"> </span>v<span class="_ _1"></span>ersion<span class="_ _2"> </span>a<span class="_ _1"></span>v<span class="_ _27"></span>ailable<span class="_ _2"> </span>for<span class="_ _6"> </span>purchase<span class="_ _6"> </span>at<span class="_ _2"> </span>Amazon.com</div><div class="t m0 x2d h8 y13b ff3 fs4 fc0 sc0 ls0 ws0">F<span class="_ _9"></span>ree<span class="_ _2"> </span>online<span class="_ _6"> </span>version<span class="_ _6"> </span>at<span class="_ _2"> </span><span class="ff5">http://riscv-<span class="_ _22"></span>programming.org</span></div><div class="t m0 x2e h8 y37e ff3 fs4 fc0 sc0 ls0 ws0">(Generated<span class="_ _2"> </span>on<span class="_ _2"> </span>Septem<span class="_ _1"></span>b<span class="_ _5"></span>er<span class="_ _6"> </span>17,<span class="_ _2"> </span>2025)</div><div class="t m0 xb8 h8 y33 ff3 fs4 fc0 sc0 ls0 ws0">95</div><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",72,199.028,null]'><div class="d m1" style="border-style:none;position:absolute;left:155.979000px;bottom:541.068000px;width:14.723000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf71" data-dest-detail='[113,"XYZ",72,566.754,null]'><div class="d m1" style="border-style:none;position:absolute;left:193.258000px;bottom:541.068000px;width:14.723000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://a.co/d/gUfKWsD"><div class="d m1" style="border-style:none;position:absolute;left:358.258000px;bottom:69.067000px;width:58.171000px;height:10.848000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="http://riscv-programming.org"><div class="d m1" style="border-style:none;position:absolute;left:271.722000px;bottom:56.835000px;width:148.940000px;height:11.125000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
